openapi: 3.0.2
info:
  contact:
    email: "tristancarion@gmail.com, paullouisperez@gmail.com"
    name: "Tristan Carion, Paul Perez"
  description: API for the computation and visualization of atmospheric dispersion
    simulations of CBRN agents.
  title: CbrnAlert API
  version: "2.0"
externalDocs:
  description: Find more info here
  url: /docs
servers:
- description: Dev Server
  url: http://localhost:4200/api
- description: Production server
  url: https://cbrnalert.rma.ac.be/api
paths:
  /login:
    post:
      description: Authentication request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_login_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_login_post_200_response'
          description: Authentication succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Access token is missing or invalid
      tags:
      - Auth
  /atp45/tree:
    get:
      description: Get the decision tree branching the different ATP-45 options.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atp45DecisionTree'
          description: OK
      tags:
      - Atp45
  /atp45/run:
    post:
      parameters:
      - description: "Determine if the weather conditions are retrieved in archive\
          \ forecasts (`archive`), in latest forecast (`forecast`) or are provided\
          \ in the request (`manually`)"
        explode: true
        in: query
        name: weathertype
        required: true
        schema:
          $ref: '#/components/schemas/Atp45RunTypes'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atp45Input'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atp45Result'
          description: OK
      tags:
      - Atp45
  /forecast/available:
    get:
      description: Return the last forecast datetimes available at ECMWF
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastAvailableSteps'
          description: OK
      tags:
      - Atp45
  /flexpart/input:
    post:
      description: Retrieve the meteorological data needed for flexpart
      parameters:
      - description: "If `simple`, use the simplified options structure defined by\
          \ `FlexpartRetrieveSimple`. If `detailed`, a full Flexpart options object\
          \ is expected (see Flexpart docs)"
        explode: true
        in: query
        name: retrievalType
        required: false
        schema:
          default: simple
          enum:
          - simple
          - detailed
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_flexpart_input_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartInput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartInputError'
          description: The Flexpart input retrieval failed.
      tags:
      - Flexpart
  /flexpart/inputs:
    get:
      description: Return all the Flexpart inputs available (default finished)
      parameters:
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/RunStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlexpartInput'
                type: array
          description: OK
      tags:
      - Flexpart
  /flexpart/inputs/{inputId}:
    delete:
      parameters:
      - description: The input ID
        explode: false
        in: path
        name: inputId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartInput'
          description: OK
      tags:
      - Flexpart
    get:
      parameters:
      - description: The input ID
        explode: false
        in: path
        name: inputId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartInput'
          description: OK
      tags:
      - Flexpart
    put:
      parameters:
      - description: The input ID
        explode: false
        in: path
        name: inputId
        required: true
        schema:
          type: string
        style: simple
      - description: The new file name chosen by the user
        explode: true
        in: query
        name: newName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartInput'
          description: OK
      tags:
      - Flexpart
  /flexpart/run:
    post:
      description: Run flexpart
      parameters:
      - description: "If `simple`, use the simplified options structure defined by\
          \ `FlexpartOptionsSimple`. If `detailed`, a full Flexpart options object\
          \ is expected (see Flexpart docs)"
        explode: true
        in: query
        name: runType
        required: false
        schema:
          default: simple
          enum:
          - simple
          - detailed
          type: string
        style: form
      - description: Input id
        explode: true
        in: query
        name: inputId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_flexpart_run_post_request'
        description: Options for Flexpart.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRun'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRunError'
          description: The Flexpart run has failed
      tags:
      - Flexpart
  /flexpart/runs:
    get:
      description: Return all the Flexpart runs (default finished)
      parameters:
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/RunStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlexpartRun'
                type: array
          description: OK
      tags:
      - Flexpart
  /flexpart/runs/{runId}:
    delete:
      parameters:
      - description: The flexpart run ID
        explode: false
        in: path
        name: runId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRun'
          description: OK
      tags:
      - Flexpart
    get:
      parameters:
      - description: The flexpart run ID
        explode: false
        in: path
        name: runId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRun'
          description: OK
      tags:
      - Flexpart
    put:
      parameters:
      - description: The flexpart run ID
        explode: false
        in: path
        name: runId
        required: true
        schema:
          type: string
        style: simple
      - description: The new file name chosen by the user
        explode: true
        in: query
        name: newName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRun'
          description: OK
      tags:
      - Flexpart
  /flexpart/runs/{runId}/outputs:
    get:
      description: Return the outputs of the Flexpart run `runId`
      parameters:
      - description: The flexpart run ID
        explode: false
        in: path
        name: runId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlexpartOutput'
                type: array
          description: OK
      tags:
      - Flexpart
  /flexpart/outputs/{outputId}:
    get:
      parameters:
      - description: The output ID
        explode: false
        in: path
        name: outputId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartOutput'
          description: OK
      tags:
      - Flexpart
  /flexpart/outputs/{outputId}/layers:
    get:
      description: Return the layers of the Flexpart output `outputId`
      parameters:
      - description: The output ID
        explode: false
        in: path
        name: outputId
        required: true
        schema:
          type: string
        style: simple
      - description: If only spatial layers must be retrieved
        explode: true
        in: query
        name: spatial
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      tags:
      - Flexpart
  /flexpart/outputs/{outputId}/dimensions:
    get:
      description: Return the dimensions layers of the Flexpart output `outputId`
        with their values
      parameters:
      - description: The output ID
        explode: false
        in: path
        name: outputId
        required: true
        schema:
          type: string
        style: simple
      - description: "If the name of the layer is given, only returns the dimensions\
          \ of the layer"
        explode: true
        in: query
        name: layer
        required: false
        schema:
          type: string
        style: form
      - description: "If false, don't return the horizontal dimensions (lons and lats)"
        explode: true
        in: query
        name: horizontal
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      tags:
      - Flexpart
  /flexpart/outputs/{outputId}/slice:
    post:
      description: Return a slice of the `output` according to some dimensions.
      parameters:
      - description: Name of the layer to slice
        explode: true
        in: query
        name: layer
        required: true
        schema:
          type: string
        style: form
      - description: "If true, the output is given in geojson format. The sliced layer\
          \ must be a surface."
        explode: true
        in: query
        name: geojson
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "If true, data for legend is provided"
        explode: true
        in: query
        name: legend
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The output ID
        explode: false
        in: path
        name: outputId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              example:
                Time:'2022-02-12T22:00:00.0': null
                height:50: null
                pointpsec:1: null
                nageclass:1: null
              type: object
        description: dimensions to be sliced along
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_flexpart_outputs__outputId__slice_post_200_response'
            image/tiff:
              schema:
                format: binary
                type: string
          description: OK
      tags:
      - Flexpart
  /flexpart/outputs/{outputId}/stats:
    post:
      description: "Return ensemble statistics of the plotted `output`, based on layer,\
        \ dimensions and input threshold value."
      parameters:
      - description: The output ID
        explode: false
        in: path
        name: outputId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the plotted layer
        explode: true
        in: query
        name: layer
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_flexpart_outputs__outputId__stats_post_request'
        required: true
      responses:
        "200":
          content:
            image/tiff:
              schema:
                format: binary
                type: string
          description: OK
      tags:
      - Flexpart
components:
  parameters:
    inputIdParam:
      description: The input ID
      explode: false
      in: path
      name: inputId
      required: true
      schema:
        type: string
      style: simple
    runIdParam:
      description: The flexpart run ID
      explode: false
      in: path
      name: runId
      required: true
      schema:
        type: string
      style: simple
    outputIdParam:
      description: The output ID
      explode: false
      in: path
      name: outputId
      required: true
      schema:
        type: string
      style: simple
    newNameParam:
      description: The new file name chosen by the user
      explode: true
      in: query
      name: newName
      required: true
      schema:
        type: string
      style: form
  responses:
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Access token is missing or invalid
  schemas:
    User:
      example:
        name: name
        email: email
        username: username
      properties:
        email:
          type: string
        username:
          type: string
        name:
          type: string
      required:
      - email
      - username
      type: object
    Atp45Category:
      description: Describe the ATP45 categories that will determine which case needs
        to be considered.
      properties:
        id:
          example: chem
          type: string
        description:
          type: string
        note:
          type: string
        longname:
          example: Chemical Weapon
          type: string
        paramtype:
          example: category
          type: string
        internalname:
          type: string
        content:
          items:
            type: string
          type: array
      required:
      - id
      type: object
    Atp45DecisionTree:
      allOf:
      - $ref: '#/components/schemas/Atp45Category'
      - $ref: '#/components/schemas/Atp45DecisionTree_allOf'
      description: "A tree of `Atp45Category`, representing the decision sequence\
        \ leading to the final ATP45 case."
    Atp45Input:
      description: Information needed to run ATP45. It requires at least the list
        of id's for discriminating the decision tree and some release location(s).
      example:
        weatherInput: null
        locations:
        - lon: 4.0
          lat: 50.0
        - lon: 4.0
          lat: 50.0
        categories:
        - simplified
        - chem
      properties:
        categories:
          description: "Array of ids, identifying the categories."
          example:
          - simplified
          - chem
          items:
            type: string
          type: array
        locations:
          items:
            $ref: '#/components/schemas/GeoPoint'
          type: array
        weatherInput:
          $ref: '#/components/schemas/Atp45Input_weatherInput'
      required:
      - categories
      - locations
      - weatherInput
      type: object
    Atp45Categories:
      description: "Array of ids, identifying the categories."
      example:
      - simplified
      - chem
      items:
        type: string
      type: array
    Atp45WeatherManual:
      description: "Weather conditions description for ATP45, in case it is provided\
        \ by the user."
      properties:
        wind:
          $ref: '#/components/schemas/WindVelocity'
        stability:
          $ref: '#/components/schemas/Atp45WeatherManual_stability'
      required:
      - stability
      - wind
      type: object
    Atp45StabilityClasses:
      enum:
      - unstable
      - neutral
      - stable
      example: unstable
      type: string
    Atp45RunTypes:
      enum:
      - forecast
      - archive
      - manually
      type: string
    WindVelocity:
      properties:
        speed:
          description: "Wind speed - unit [m/s]"
          example: 5.0
          type: number
        azimuth:
          description: "angle from North - unit [m/s]"
          example: 30.0
          type: number
      required:
      - azimuth
      - speed
      type: object
    GeoPoint:
      example:
        lon: 4.0
        lat: 50.0
      properties:
        lon:
          description: "Longitude [°]"
          example: 4.0
          type: number
        lat:
          description: "Latitude [°]"
          example: 50.0
          type: number
      required:
      - lat
      - lon
      type: object
    GeoRectangle:
      properties:
        top:
          description: "north lat [°]"
          example: 51.0
          type: number
        bottom:
          description: "south lat [°]"
          example: 49.0
          type: number
        left:
          description: "west lon [°]"
          example: 3.0
          type: number
        right:
          description: "east lon [°]"
          example: 5.0
          type: number
      required:
      - bottom
      - left
      - right
      - top
      type: object
    Atp45Result:
      example:
        metadata: "{}"
        collection: null
      properties:
        collection:
          $ref: '#/components/schemas/Atp45Result_collection'
        metadata:
          type: object
      required:
      - collection
      type: object
    Atp45Zone:
      allOf:
      - $ref: '#/components/schemas/Feature'
      - $ref: '#/components/schemas/Atp45Zone_allOf'
    ForecastAvailableSteps:
      example:
        leadtimes:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        start: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          type: string
        leadtimes:
          items:
            format: date-time
            type: string
          type: array
      required:
      - leadtimes
      - start
      type: object
    ForecastStep:
      properties:
        start:
          format: date-time
          type: string
        leadtime:
          format: date-time
          type: string
      required:
      - leadtime
      - start
      type: object
    FlexpartRetrieveSimple:
      description: Simplified data structure needed for a retrieval of meteorological
        data for Flexpart
      properties:
        area:
          $ref: '#/components/schemas/GeoRectangle'
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        gridres:
          default: 1.0
          description: "unit: [°]"
          type: number
        timeStep:
          default: 3600
          description: "unit: [s]"
          type: number
        datasetType:
          description: button to select either "deterministic" or "ensemble" data
          type: string
      required:
      - area
      - datasetType
      - end
      - gridres
      - start
      - timeStep
      type: object
    FlexpartInput:
      example:
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        control:
          key: control
        ensemble: true
        uuid: uuid
        status: status
      properties:
        uuid:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/RunStatus'
        date_created:
          format: date-time
          type: string
        control:
          additionalProperties:
            type: string
          type: object
        ensemble:
          type: boolean
      required:
      - control
      - date_created
      - ensemble
      - name
      - uuid
      type: object
    FlexpartInputError:
      properties:
        error:
          type: string
        info:
          type: string
        code:
          $ref: '#/components/schemas/WeatherRetrievalErrorCode'
      type: object
    WeatherRetrievalErrorCode:
      description: |-
        Application specific error code when a retrieval to MARS from ECMWF fails.
        Possible values area:
        - 'dataNotYetAvailable': The requested weather data are not available yet.
        - 'unknownMarsError': MARS error that couldn't be identified.
      enum:
      - dataNotYetAvailable
      - unknownMarsError
      type: string
    FlexpartReleaseSimple:
      properties:
        substanceName:
          default: Generic Air Tracer
          type: string
        location:
          $ref: '#/components/schemas/GeoPoint'
        geometryName:
          default: Point
          type: string
        boxLength:
          default: 0
          description: "unit: [m]"
          type: number
        boxWidth:
          default: 0
          description: "unit: [m]"
          type: number
        boxHeight:
          default: 0
          description: "unit: [m]"
          type: number
        height:
          default: 10
          description: "unit: [m]"
          type: number
        mass:
          default: 1
          description: "unit: [kg]"
          type: number
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        particles:
          type: number
      required:
      - end
      - height
      - location
      - mass
      - start
      - substanceName
      type: object
    FlexpartCommandSimple:
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        timeStep:
          default: 3600
          description: "unit: [s]"
          type: number
        outputType:
          default: 1
          description: Unit for the output type (see Flexpart docs)
          type: number
      required:
      - end
      - outputType
      - start
      - timeStep
      type: object
    FlexpartOutgridSimple:
      properties:
        area:
          $ref: '#/components/schemas/GeoRectangle'
        gridres:
          default: 0.01
          description: "unit: [°]"
          type: number
        heights:
          items:
            default: 1.0
            type: number
          type: array
      required:
      - area
      - gridres
      - heights
      type: object
    FlexpartOptionsSimple:
      properties:
        releases:
          items:
            $ref: '#/components/schemas/FlexpartReleaseSimple'
          type: array
        command:
          $ref: '#/components/schemas/FlexpartCommandSimple'
        outgrid:
          $ref: '#/components/schemas/FlexpartOutgridSimple'
      required:
      - command
      - outgrid
      - releases
      type: object
    FlexpartRun:
      example:
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        options: "{}"
        ensemble: true
        uuid: uuid
        status: status
      properties:
        uuid:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/RunStatus'
        date_created:
          format: date-time
          type: string
        options:
          type: object
        ensemble:
          type: boolean
      required:
      - date_created
      - ensemble
      - name
      - options
      - uuid
      type: object
    FlexpartRunError:
      description: Error when a Flexpart run fails.
      properties:
        error:
          type: string
        info:
          type: string
        code:
          $ref: '#/components/schemas/FlexpartRunErrorCode'
      type: object
    FlexpartRunErrorCode:
      description: |-
        Application specific error code when a Flexpart run fails.
        Possible values area:
        - 'noMeteoFieldsAvailable': The Flexpart run time window exceeds the available meteorological fields valid time.
        - 'unknownFlexpartRunError': Flexpart run error that couldn't be identified.
      enum:
      - noMeteoFieldsAvailable
      - unknownFlexpartRunError
      type: string
    FlexpartOutput:
      example:
        filetype: filetype
        metadata: "{}"
        isnested: true
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        member: member
        uuid: uuid
      properties:
        uuid:
          type: string
        name:
          type: string
        date_created:
          format: date-time
          type: string
        metadata:
          type: object
        filetype:
          type: string
        isnested:
          type: boolean
        member:
          type: string
      required:
      - date_created
      - member
      - metadata
      - name
      - uuid
      type: object
    RawSliceResponse:
      items:
        type: number
      type: array
    GeoJsonSliceResponse:
      properties:
        collection:
          $ref: '#/components/schemas/GeoJsonSliceResponse_collection'
        metadata:
          $ref: '#/components/schemas/GeoJsonSliceResponse_metadata'
      required:
      - collection
      type: object
    ColorbarData:
      properties:
        colors:
          description: Colors for each interval in hex format
          example:
          - '#00007F'
          - '#0000FF'
          - '#7F0000'
          items:
            type: string
          type: array
        ticks:
          description: Values for the bounding intervals
          items:
            type: number
          type: array
      required:
      - ticks
      type: object
    GeoCell:
      allOf:
      - $ref: '#/components/schemas/Feature'
      - $ref: '#/components/schemas/GeoCell_allOf'
      required:
      - geometry
      - properties
      type: object
    RunStatus:
      enum:
      - created
      - finished
      - ongoing
      - errored
      type: string
    UnauthorizedError:
      properties:
        error:
          type: string
        info:
          type: string
      required:
      - error
      type: object
    FeatureCollection:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - $ref: '#/components/schemas/FeatureCollection_allOf'
      description: GeoJSon 'FeatureCollection' object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
    GeoJsonObject:
      description: |
        GeoJSon object
        The coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.
      discriminator:
        propertyName: type
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
      properties:
        type:
          enum:
          - Feature
          - FeatureCollection
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          - GeometryCollection
          type: string
        bbox:
          items:
            type: number
          type: array
      required:
      - type
      type: object
    Feature:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - $ref: '#/components/schemas/Feature_allOf'
      description: GeoJSon 'Feature' object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
    Geometry:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - $ref: '#/components/schemas/Geometry_allOf'
      description: |
        Abstract type for all GeoJSon object except Feature and FeatureCollection
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
    Polygon:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - $ref: '#/components/schemas/Polygon_allOf'
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.6
    GeometryElement:
      allOf:
      - $ref: '#/components/schemas/Geometry'
      - $ref: '#/components/schemas/GeometryElement_allOf'
      description: |
        Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
    LinearRing:
      description: |
        A linear ring is a closed LineString with four or more positions.
        The first and last positions are equivalent, and they MUST contain identical values; their representation SHOULD also be identical.
        A linear ring is the boundary of a surface or the boundary of a hole in a surface.
        A linear ring MUST follow the right-hand rule with respect to the area it bounds, i.e., exterior rings are counterclockwise, and holes are clockwise.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.6
      items:
        $ref: '#/components/schemas/Position'
      minItems: 4
      type: array
    Position:
      description: |
        GeoJSon fundamental geometry construct.
        A position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.
        Implementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as "M") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.1
      items:
        type: number
      maxItems: 3
      minItems: 2
      type: array
    _login_post_request:
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
    _login_post_200_response:
      example:
        expiresIn: 0.8008281904610115
        idToken: idToken
        user:
          name: name
          email: email
          username: username
      properties:
        idToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
        expiresIn:
          type: number
      required:
      - idToken
      - user
      type: object
    _flexpart_input_post_request:
      oneOf:
      - $ref: '#/components/schemas/FlexpartRetrieveSimple'
    _flexpart_run_post_request:
      oneOf:
      - $ref: '#/components/schemas/FlexpartOptionsSimple'
    _flexpart_outputs__outputId__slice_post_200_response:
      oneOf:
      - $ref: '#/components/schemas/RawSliceResponse'
      - $ref: '#/components/schemas/GeoJsonSliceResponse'
    _flexpart_outputs__outputId__stats_post_request:
      properties:
        dims:
          additionalProperties:
            type: integer
          description: Indices of selected dimensions (time and height)
          type: object
        threshold:
          description: Threshold value used to calculate stats (ensemble agreement
            and individual masks)
          type: number
      required:
      - dims
      - threshold
      type: object
    Atp45DecisionTree_allOf:
      properties:
        children:
          items:
            $ref: '#/components/schemas/Atp45DecisionTree'
          type: array
      required:
      - children
      type: object
      example: null
    Atp45Input_weatherInput_oneOf:
      properties:
        archiveDate:
          format: date-time
          type: string
      required:
      - archiveDate
      type: object
    Atp45Input_weatherInput:
      oneOf:
      - $ref: '#/components/schemas/Atp45WeatherManual'
      - $ref: '#/components/schemas/ForecastStep'
      - $ref: '#/components/schemas/Atp45Input_weatherInput_oneOf'
    Atp45WeatherManual_stability:
      properties:
        stabilityClass:
          $ref: '#/components/schemas/Atp45StabilityClasses'
      required:
      - stabilityClass
      type: object
    Atp45Result_collection_allOf:
      properties:
        features:
          items:
            $ref: '#/components/schemas/Atp45Zone'
          type: array
      required:
      - features
      type: object
    Atp45Result_collection:
      allOf:
      - $ref: '#/components/schemas/FeatureCollection'
      - $ref: '#/components/schemas/Atp45Result_collection_allOf'
    Atp45Zone_allOf_properties:
      properties:
        type:
          example: release
          type: string
        shape:
          example: circle
          type: string
      type: object
      example: null
    Atp45Zone_allOf:
      properties:
        properties:
          $ref: '#/components/schemas/Atp45Zone_allOf_properties'
        geometry:
          allOf:
          - $ref: '#/components/schemas/Polygon'
      required:
      - geometry
      - properties
      type: object
      example: null
    GeoJsonSliceResponse_collection_allOf:
      properties:
        features:
          items:
            $ref: '#/components/schemas/GeoCell'
          type: array
      required:
      - features
      type: object
    GeoJsonSliceResponse_collection:
      allOf:
      - $ref: '#/components/schemas/FeatureCollection'
      - $ref: '#/components/schemas/GeoJsonSliceResponse_collection_allOf'
    GeoJsonSliceResponse_metadata:
      oneOf:
      - $ref: '#/components/schemas/ColorbarData'
    GeoCell_allOf_properties:
      properties:
        val:
          type: number
      required:
      - val
      type: object
      example: null
    GeoCell_allOf:
      properties:
        geometry:
          $ref: '#/components/schemas/Polygon'
        properties:
          $ref: '#/components/schemas/GeoCell_allOf_properties'
      type: object
      example: null
    FeatureCollection_allOf:
      properties:
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
      required:
      - features
      type: object
      example: null
    Feature_allOf:
      properties:
        geometry:
          allOf:
          - nullable: true
          - $ref: '#/components/schemas/Geometry'
        properties:
          nullable: true
          type: object
        id:
          oneOf:
          - type: number
          - type: string
      required:
      - geometry
      - properties
      type: object
      example: null
    Geometry_allOf:
      discriminator:
        propertyName: type
      properties:
        type:
          enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          - GeometryCollection
          type: string
      required:
      - type
      type: object
      example: null
    Polygon_allOf:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/LinearRing'
          type: array
      required:
      - coordinates
      type: object
      example: null
    GeometryElement_allOf:
      discriminator:
        propertyName: type
      properties:
        type:
          enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          type: string
      required:
      - type
      type: object
      example: null
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
