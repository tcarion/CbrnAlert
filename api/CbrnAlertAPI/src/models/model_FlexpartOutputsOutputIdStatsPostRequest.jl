# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    FlexpartOutputsOutputIdStatsPostRequest(;
        dims=nothing,
        threshold=nothing,
    )

    - dims::Dict{String, Int64} : Indices of selected dimensions (time and height)
    - threshold::Float64 : Threshold value used to calculate stats (ensemble agreement and individual masks)
"""
Base.@kwdef mutable struct FlexpartOutputsOutputIdStatsPostRequest <: OpenAPI.APIModel
    dims::Union{Nothing, Dict{String, Int64}} = nothing
    threshold::Union{Nothing, Float64} = nothing

    function FlexpartOutputsOutputIdStatsPostRequest(dims, threshold, )
        OpenAPI.validate_property(FlexpartOutputsOutputIdStatsPostRequest, Symbol("dims"), dims)
        OpenAPI.validate_property(FlexpartOutputsOutputIdStatsPostRequest, Symbol("threshold"), threshold)
        return new(dims, threshold, )
    end
end # type FlexpartOutputsOutputIdStatsPostRequest

const _property_types_FlexpartOutputsOutputIdStatsPostRequest = Dict{Symbol,String}(Symbol("dims")=>"Dict{String, Int64}", Symbol("threshold")=>"Float64", )
OpenAPI.property_type(::Type{ FlexpartOutputsOutputIdStatsPostRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlexpartOutputsOutputIdStatsPostRequest[name]))}

function check_required(o::FlexpartOutputsOutputIdStatsPostRequest)
    o.dims === nothing && (return false)
    o.threshold === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FlexpartOutputsOutputIdStatsPostRequest }, name::Symbol, val)
end
