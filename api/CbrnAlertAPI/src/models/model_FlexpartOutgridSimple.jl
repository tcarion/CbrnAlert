# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    FlexpartOutgridSimple(;
        area=nothing,
        gridres=0.01,
        heights=nothing,
    )

    - area::GeoRectangle
    - gridres::Float64 : unit: [Â°]
    - heights::Vector{Float64}
"""
Base.@kwdef mutable struct FlexpartOutgridSimple <: OpenAPI.APIModel
    area = nothing # spec type: Union{ Nothing, GeoRectangle }
    gridres::Union{Nothing, Float64} = 0.01
    heights::Union{Nothing, Vector{Float64}} = nothing

    function FlexpartOutgridSimple(area, gridres, heights, )
        OpenAPI.validate_property(FlexpartOutgridSimple, Symbol("area"), area)
        OpenAPI.validate_property(FlexpartOutgridSimple, Symbol("gridres"), gridres)
        OpenAPI.validate_property(FlexpartOutgridSimple, Symbol("heights"), heights)
        return new(area, gridres, heights, )
    end
end # type FlexpartOutgridSimple

const _property_types_FlexpartOutgridSimple = Dict{Symbol,String}(Symbol("area")=>"GeoRectangle", Symbol("gridres")=>"Float64", Symbol("heights")=>"Vector{Float64}", )
OpenAPI.property_type(::Type{ FlexpartOutgridSimple }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlexpartOutgridSimple[name]))}

function check_required(o::FlexpartOutgridSimple)
    o.area === nothing && (return false)
    o.gridres === nothing && (return false)
    o.heights === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FlexpartOutgridSimple }, name::Symbol, val)
end
