# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    EnsembleStatsResponse(;
        agreement=nothing,
        masks=nothing,
    )

    - agreement::Vector{Vector{Float64}} : 2D array representing the percentage of ensemble members exceeding the threshold.
    - masks::Vector{Vector{Vector{Bool}}} : List of 2D boolean masks for each ensemble member (and mean).
"""
Base.@kwdef mutable struct EnsembleStatsResponse <: OpenAPI.APIModel
    agreement::Union{Nothing, Vector{Vector{Float64}}} = nothing
    masks::Union{Nothing, Vector{Vector{Vector{Bool}}}} = nothing

    function EnsembleStatsResponse(agreement, masks, )
        OpenAPI.validate_property(EnsembleStatsResponse, Symbol("agreement"), agreement)
        OpenAPI.validate_property(EnsembleStatsResponse, Symbol("masks"), masks)
        return new(agreement, masks, )
    end
end # type EnsembleStatsResponse

const _property_types_EnsembleStatsResponse = Dict{Symbol,String}(Symbol("agreement")=>"Vector{Vector{Float64}}", Symbol("masks")=>"Vector{Vector{Vector{Bool}}}", )
OpenAPI.property_type(::Type{ EnsembleStatsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnsembleStatsResponse[name]))}

function check_required(o::EnsembleStatsResponse)
    true
end

function OpenAPI.validate_property(::Type{ EnsembleStatsResponse }, name::Symbol, val)
end
